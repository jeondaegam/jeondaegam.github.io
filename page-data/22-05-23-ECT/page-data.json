{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/22-05-23-ECT/",
    "result": {"data":{"cur":{"id":"1d5ccf2e-4af5-5eaf-8076-98ac166b9c32","html":"<h2 id=\"persistence\" style=\"position:relative;\"><a href=\"#persistence\" aria-label=\"persistence permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Persistence</h2>\n<p>데이터를 생성한 프로그램이 종료되더라도 사라지지 않는 데이터의 특성<br>\n=영속성</p>\n<h2 id=\"jdbc의-개념\" style=\"position:relative;\"><a href=\"#jdbc%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"jdbc의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jdbc의 개념</h2>\n<p>마치 내가 이름 모르는 나라에 가서도 금과 은을 캐낼 수 있는 환경을 만드는 것으로 비유할 수 있다.</p>\n<img width=\"50%\" src=\"https://user-images.githubusercontent.com/83997369/169747664-1f2c4f38-ef27-4e30-95b4-116266cc10ea.jpg\">\n<h2 id=\"기존의-jdbc는\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4%EC%9D%98-jdbc%EB%8A%94\" aria-label=\"기존의 jdbc는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존의 jdbc는?</h2>\n<p>Connection 객체를 수동으로 관리한다.<br>\nserver, username, pass 등을 바탕으로 DriverManager.getConnection을 통해 connection을 설정하는 것이 그 예이다.<br>\nsql문을 작성한다.<br>\nprepareStatement로 sql을 전달한다.</p>\n<h2 id=\"jpa의-장점\" style=\"position:relative;\"><a href=\"#jpa%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"jpa의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA의 장점?</h2>\n<ol>\n<li>java application 내에서 sql문을 직접 작성할 경우가 적어진다.</li>\n<li>sql 구조를 java application 내에서 적용하지 않아도 된다.</li>\n</ol>\n<h2 id=\"jdbc와-jpa의-구조-비교\" style=\"position:relative;\"><a href=\"#jdbc%EC%99%80-jpa%EC%9D%98-%EA%B5%AC%EC%A1%B0-%EB%B9%84%EA%B5%90\" aria-label=\"jdbc와 jpa의 구조 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jdbc와 jpa의 구조 비교</h2>\n<img width=\"70%\" src=\"https://user-images.githubusercontent.com/83997369/169747997-79371278-1056-48f7-b405-5a76ceb5649c.jpg\">\n<p>참ㄱ</p>","excerpt":"Persistence 데이터를 생성한 프로그램이 종료되더라도 사라지지 않는 데이터의 특성 =영속성 jdbc의 개념 마치 내가 이름 모르는 나라에 가서도 금과 은을 캐낼 수 있는 환경을 만드는 것으로 비유할 수 있다. 기존의 jdbc는? Connection 객체를 수동으로 관리한다. server, username, pass 등을 바탕으로 DriverManager.getConnection을 통해 connection을 설정하는 것이 그 예이다. sql문을 작성한다. prepareStatement로 sql을 전달한다. JPA의 장점? java application 내에서 sql문을 직접 작성할 경우가 적어진다. sql 구조를 java application 내에서 적용하지 않아도 된다. jdbc와 jpa의 구조 비교 참ㄱ","frontmatter":{"date":"May 23, 2022","title":"JPA가 뭐야?","categories":"ECT","author":"여름","emoji":"💿"},"fields":{"slug":"/22-05-23-ECT/"}},"next":{"id":"de92f518-97db-5749-92c5-8c6e9b078496","html":"<p>5월의 숙원사업으로 남아있던 블로그 만들기를 해냈다.<br>\nthree.js 실습 도중 알게된 줌코딩님의 블로그가 인상깊어 줌코딩님의 테마를 가져와 적용해보았다.<br>\n사실 블로그를 적용하기까지 몇 번의 실패가 있었지만.. 이렇게 성공해서 무척 뿌듯하다!🙌</p>\n<p>처음 TIL을 알게된 것은 초보몽키님 때문이었다.<br>\n매일 새로 알게된 내용을 정리하고 하루를 되돌아보는 시간을 갖는다는 점이 마음을 흔들어<br>\n한동안 꾸준히 작성했는데 어느 순간부터 글자 하나를 수정하는 것에도<br>\ncommit을 해야하는 과정이 복잡하게 느껴졌고<br>\n에버노트와 노션으로 넘어가면서 자연스레 git 블로그를 멈추게 되었다.</p>\n<p>그런데 이제와서 다시 git 블로그를 시작하려는 이유는<br>\n빠르게 흘러가는 하루를 기록하고 싶기도 하고<br>\nTIL을 작성하기 위해서라도 열심히 공부하던 그 당시의 열정이 그리워서..!<br>\n이 블로그가 꾸준히 공부할 수 있는 동기부여가 되어주기를 바란다.<br>\n열심히 해보자 🤘🤘</p>","frontmatter":{"date":"May 22, 2022","title":"시작","categories":"TIL","author":"여름","emoji":"👶"},"fields":{"slug":"/22-05-22-TIL/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jeondaegam.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/22-05-23-ECT/","nextSlug":"/22-05-22-TIL/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}