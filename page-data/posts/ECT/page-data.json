{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/ECT",
    "result": {"pageContext":{"currentCategory":"ECT","categories":["All","ECT","TIL","블로그","featured"],"edges":[{"node":{"id":"1d5ccf2e-4af5-5eaf-8076-98ac166b9c32","excerpt":"Persistence 데이터를 생성한 프로그램이 종료되더라도 사라지지 않는 데이터의 특성 =영속성 jdbc의 개념 마치 내가 이름 모르는 나라에 가서도 금과 은을 캐낼 수 있는 환경을 만드는 것으로 비유할 수 있다. 기존의 jdbc는? Connection 객체를 수동으로 관리한다. server, username, pass 등을 바탕으로 DriverManager.getConnection을 통해 connection을 설정하는 것이 그 예이다. sql문을 작성한다. prepareStatement로 sql을 전달한다. JPA의 장점? java application 내에서 sql문을 직접 작성할 경우가 적어진다. sql 구조를 java application 내에서 적용하지 않아도 된다. jdbc와 jpa의 구조 비교","fields":{"slug":"/22-05-23-ECT/"},"frontmatter":{"categories":"ECT","title":"JPA가 뭐야?","date":"May 23, 2022"}},"next":{"fields":{"slug":"/22-05-22-TIL/"}},"previous":null}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}