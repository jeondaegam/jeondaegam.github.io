{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/ECT",
    "result": {"pageContext":{"currentCategory":"ECT","categories":["All","BOOK","ENG","TIL","ECT","블로그","featured"],"edges":[{"node":{"id":"1e2f241a-e2b9-5e01-ab7d-bb24d5e19946","excerpt":"###Node.js란? Node.js는 Chrome V8 Javascript 엔진으로 빌드 된 JavaScript 런타임입니다. 자바스크립트의 실행 환경을 만들어주는 서버 엔진 프로그램. 즉 다양한 자바스크립트 애플리케이션을 실행할 수 있으며, 서버를 실행하는 데 제일 많이 사용된다. \r\n###Node.js를 사용하는 이유 이름에서 알 수 있듯 JavaScript는 독립적인 언어가 아닌 스크립트 언어이다. 스크립트 언어는 특정한 프로그램 안에서 동작하기 때문에 웹 브라우저 안에서만 동작을 한다. 즉 JavaScript를 웹 브라우저에서 독립시킨 것으로, Node.js를 설치하면 터미널 프로그램(cmd, terminal 등)에서 node.js를 입력하여 브라우저 없이 바로 실행할 수 있다. 이렇게 Node.js를 이용하여 웹 브라우저와 무관한 프로그램을 만들 수 있게 되었다. ###Javascript 런타임 런타임이란 특정 언어로 만든 프로그램을 실행할 수 있는 환경을 뜻한다. No…","fields":{"slug":"/22-05-26-ECT/"},"frontmatter":{"categories":"ECT","title":"What is Node.js?","date":"May 26, 2022"}},"next":{"fields":{"slug":"/22-05-25-ECT/"}},"previous":{"fields":{"slug":"/22-05-26-TIL/"}}},{"node":{"id":"6f2f263e-eb60-5a36-b57b-129a76ae4f49","excerpt":"###Webpack  Webpack은 Javascript를 위한 bundler이다. 서로 관련있는 파일들을 하나로 bundling(=packaging)해준다. ###Bundler의 역할\r\n모듈화된 js 파일들을 묶어준다. 따라서 번들링이란 모듈화된 js 파일을 묶어준다는 의미이다. 왜 나온거지?(todo) Software가 커질수록 세분화된 모듈은 많아지고,\r\n모듈 단위의 파일들을 호출할 때 변수들의 스코프 문제,\r\n호출할 때의 네트워크 코스트도 신경써야 한다. Bundling을 하면 왜 좋을까? 동일한 타입(html, css, js등)의 파일을 묶어 요청/응답할 수 있으므로 network cost가 감소한다. 예를들어 A 파일에서 B 파일을 호출해야 할 경우 두 파일을 하나로 묶어 네트워크 요청을 최소화 할 수 있다. webpack의 주요 구성요소중 하나인 Loader가 일부 브라우저에서 지원이 되지 않는 ES6 형식의 js 파일을 ES5로 변환하여 사용할 수 있게 만들어준다. …","fields":{"slug":"/22-05-25-ECT/"},"frontmatter":{"categories":"ECT","title":"What is Webpack?","date":"May 25, 2022"}},"next":{"fields":{"slug":"/22-05-23-ECT/"}},"previous":{"fields":{"slug":"/22-05-26-ECT/"}}},{"node":{"id":"1d5ccf2e-4af5-5eaf-8076-98ac166b9c32","excerpt":"Persistence 데이터를 생성한 프로그램이 종료되더라도 사라지지 않는 데이터의 특성 =영속성 jdbc의 개념 마치 내가 이름 모르는 나라에 가서도 금과 은을 캐낼 수 있는 환경을 만드는 것으로 비유할 수 있다. 기존의 jdbc는? Connection 객체를 수동으로 관리한다. server, username, pass 등을 바탕으로 DriverManager.getConnection을 통해 connection을 설정하는 것이 그 예이다. sql문을 작성한다. prepareStatement로 sql을 전달한다. JPA의 장점? java application 내에서 sql문을 직접 작성할 경우가 적어진다. sql 구조를 java application 내에서 적용하지 않아도 된다. jdbc와 jpa의 구조 비교 참고 우아한Tech: 올레의 JPA와 JDBC","fields":{"slug":"/22-05-23-ECT/"},"frontmatter":{"categories":"ECT","title":"JPA가 뭐야?","date":"May 23, 2022"}},"next":{"fields":{"slug":"/22-05-22-TIL/"}},"previous":{"fields":{"slug":"/22-05-25-ECT/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}